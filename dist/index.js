(()=>{var e={764:(e,t,s)=>{const r=s(860),o=r();s(17);o.use(r.urlencoded({extended:!1})),o.use(r.json()),o.use(s(953)),o.set("port",process.env.PORT),e.exports=o},187:(e,t,s)=>{const r=s(344),o=s(714);t.login=async(e,t)=>{const{dni:s}=e.body,n=await o.findOne({dni:s},(e=>e));if(!n)return t.json({done:!1,message:"Usuario no encontrado"}).status(404);const a=r.sign(n._id.toString(),process.env.SECRET);return t.json({token:a,message:"Inicio sesíon exitoso!"}).status(200)},t.register=async(e,t)=>{const{dni:s,name:r}=e.body;if(await o.findOne({dni:s}))return t.json({message:"El usuario ya está registrado"}).status(400);if(!s||!r)return t.json({message:"Complete el formulario",done:!1}).status(400);const n=new o({dni:s,name:r});return await n.save(),t.json({message:"Usuario registrado correctamente!"}).status(200)}},362:(e,t,s)=>{const r=s(127);t.submitPills=async(e,t)=>{const{pillName:s,repeat:o,pillHour:n,amount:a}=e.body;if(!(s&&o&&n&&a))return t.json({message:"Faltan datos",done:!1}).status(403);const i=new r({pillName:s,repeat:o,pillHour:n,amount:a,idUser:e.userId});return await i.save(),t.json({message:"Pastilla cargada con éxito"}).status(200)},t.getPills=async(e,t)=>{try{const s=await r.find({idUser:e.userId});return t.json({pills:s})}catch(e){throw new Error(`Error obteniendo las pastillas ${e}`)}},t.getOnePill=async(e,t)=>{const{id:s}=e.params;if(!s)return t.json({message:"id pill empty"}).status(400);try{const e=await r.findOne({_id:s});return e?t.json({done:!0,results:e}):t.json({message:"Pastilla no encontrada"}).status(404)}catch(e){throw new Error(`Error finding id / ${e}`)}}},629:(e,t,s)=>{const r=s(693);s(245);t.submitRecord=async(e,t)=>{const{pillName:s,pillDate:o,amount:n}=e.body;if(!s||!o||!n)return t.json({message:"Faltan datos"}).status(400);try{const a=new r({pillName:s,pillDate:o,idUser:e.userId,amount:n});return a.pillDate=a.formatDate(a.pillDate),await a.save(),t.json({done:!0}).status(200)}catch(e){throw console.log(e),new Error("Error al guardar el registro")}},t.getRecords=async(e,t)=>{const s=await r.find({idUser:e.userId},(e=>e));return t.json({records:s}).status(200)},t.getOneRecord=async(e,t)=>{const s=await r.findById(e.params.id);if(!s)return t.json({done:!1,message:"Registro no encontrado"}).status(404);t.json({done:!0,record:s}).status(200)}},929:(e,t,s)=>{const r=s(185);r.connect(process.env.MONGO_URI,{useNewUrlParser:!0,useUnifiedTopology:!0}),r.connection.on("open",(()=>{console.log("Database connected!")})),r.connection.on("error",(e=>{console.log(e)})),e.exports=r},127:(e,t,s)=>{const{Schema:r,model:o}=s(185),n=new r({pillName:{type:String,required:!0},repeat:{type:Number,required:!0},pillHour:{type:String,required:!0},idUser:{type:String,required:!0},amount:{type:Number,required:!0}});e.exports=o("Pills",n)},693:(e,t,s)=>{const{Schema:r,model:o}=s(185),n=new r({pillName:{type:String,required:!0},pillDate:{type:Date,required:!0},idUser:{type:String,required:!0},amount:{type:Number,required:!0,default:1}});n.methods.formatDate=function(e){return new Date(e)},e.exports=o("Records",n)},714:(e,t,s)=>{const{Schema:r,model:o}=s(185),n=new r({dni:{type:String,required:!0},name:{type:String,required:!0}});e.exports=o("Users",n)},953:(e,t,s)=>{s(929);const r=s(860).Router(),{submitRecord:o,getRecords:n,getOneRecord:a,getTodayRecords:i}=s(629),{register:d,login:u,logout:l}=s(187),{getPills:c,submitPills:g,getOnePill:p}=s(362),{userAlreadyLogged:m,userMustBeLogged:y}=s(992);r.get("/records",y),r.get("/records",n),r.post("/new-record",y),r.post("/new-record",o),r.get("/todayrecords",y),r.get("/todayrecords",i),r.get("/record/:id",y),r.get("/record/:id",a),r.get("/pills",y),r.get("/pills",c),r.post("/new-pill",y),r.post("/new-pill",g),r.get("/pill/:id",y),r.get("/pill/:id",p),r.post("/register",m),r.post("/register",d),r.post("/login",m),r.post("/login",u),r.get("/logout",y),r.get("/logout",l),e.exports=r},992:(e,t,s)=>{const r=s(344);e.exports={userMustBeLogged:function(e,t,s){const o=e.headers["x-access-token"];if(!o)return t.json({message:"the user must be logged"}).status(401);e.userId=r.verify(o,process.env.SECRET),s()},userAlreadyLogged:function(e,t,s){if(e.headers["x-access-token"])return t.json({message:"user already logged"}).status(401);s()}}},860:e=>{"use strict";e.exports=require("express")},344:e=>{"use strict";e.exports=require("jsonwebtoken")},245:e=>{"use strict";e.exports=require("moment")},185:e=>{"use strict";e.exports=require("mongoose")},17:e=>{"use strict";e.exports=require("path")}},t={};function s(r){var o=t[r];if(void 0!==o)return o.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,s),n.exports}(()=>{const e=s(764);e.listen(e.get("port"),(()=>{console.log("Server Up!")}))})()})();